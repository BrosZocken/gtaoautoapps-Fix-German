;80s per run
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;CONFIG
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================

#SingleInstance, Force
#Include %A_ScriptDir%
FileCreateDir, %A_WorkingDir%\images
FileInstall, images\map_button.bmp, %A_WorkingDir%\images\map_button.bmp, 1 ;map button
FileInstall, images\joining_online_button.bmp, %A_WorkingDir%\images\joining_online_button.bmp, 1 ;joining online button
FileInstall, images\browser_tile.png, %A_WorkingDir%\images\browser_tile.png, 1 ;browser tile
FileInstall, images\quick_actions_tile.bmp, %A_WorkingDir%\images\quick_actions_tile.bmp, 1 ;quick actions list tile
FileInstall, images\return_to_map_button.bmp, %A_WorkingDir%\images\return_to_map_button.bmp, 1 ;return to map button(dynasty 8)
FileInstall, images\retry_continue_buttons.bmp, %A_WorkingDir%\images\retry_continue_buttons.bmp, 1 ;retry/continue buttons
FileInstall, images\trade_in_property_menu.bmp, %A_WorkingDir%\images\trade_in_property_menu.bmp, 1 ;trade in property menu
SetKeyDelay, 130, 1
SetMouseDelay, 70
CoordMode, Pixel, Relative
SetTitleMatchMode, 2
currentVersion := "v0.1.1" ; Define the current version of the script
debugMode := 0 ; Global variable for debug mode (0 = off, 1 = on)
slowMode := 0 ; Global variable for slow mode (0 = off, 1 = on)
slowModeDelay := 0 ; Default delay in milliseconds for slow mode (0 = no delay)
isHoldingNumpad6 := false ; Variable to track if Numpad6 is being held
numpad6PressTime := 0 ; Variable to track the press time of Numpad6

;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;STARTUP
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================

if not A_IsAdmin
{
  Run *RunAs "%A_ScriptFullPath%",, UseErrorLevel
  if ErrorLevel != 0
  {
    MsgBox, 48, Error, This script requires administrator privileges! Please run it again with the correct privileges.
    ExitApp
  }
}

; Call the update check after the admin rights check
CheckForUpdates()

;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;HOTKEYS
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================

Numpad0:: ;preparation phase start hotkey
  Hotkey, Numpad1, Off ; Deactivate Numpad1
  MsgBox, 4,, You're going to start "preparation phase"`n!!!WARNING!!!`n You need to have at least $5,000,000 on your GTA Online's bank account!`n!!!WARNING!!!`nDo you want to continue?
  IfMsgBox, Yes
  {
    ApartmentsPrep()
    Hotkey, Numpad1, On ; Reactivate Numpad1 after completion
    Return
  }
  else
  {
    Hotkey, Numpad1, On ; Reactivate Numpad1 if canceled
    Return
  }

Numpad1:: ;payback phase start hotkey
  Hotkey, Numpad0, Off ; Deactivate Numpad0
  MsgBox, 4,, You're going to start "payback phase"`n!!!WARNING!!!`nMake sure that you've prepared the slots!`n!!!WARNING!!!`nDo you want to continue?
  IfMsgBox, Yes
  {
    ApartmentsRun()
    Hotkey, Numpad0, On ; Reactivate Numpad0 after completion
    Return
  }
  else
  {
    Hotkey, Numpad0, On ; Reactivate Numpad0 if canceled
    Return
  }

Numpad2:: ;"panic button" no-save enable hotkey
  saveblockEnable()
Return

Numpad3:: ;"panic button" no-save disable hotkey
  saveblockDisable()
Return

Numpad4:: ;"panic button" reload hotkey
  saveblockDisable()
  Reload
Return

Numpad5:: ;"panic button" exit hotkey
  saveblockDisable()
ExitApp
Return

Numpad6::
  if (!isHoldingNumpad6) ; If the key is not already marked as held
  {
    isHoldingNumpad6 := true ; Mark the key as being held
    numpad6PressTime := A_TickCount ; Record the time when the key is pressed
    slowModeDelay := (slowModeDelay + 50) > 300 ? 0 : slowModeDelay + 50 ; Cycle through 0, 50, 100, ..., 300
    slowMode := (slowModeDelay > 0) ; Enable slow mode if delay is greater than 0
    ShowToolTip(slowModeDelay > 0 ? "Slow mode enabled with " . slowModeDelay . "ms delay" : "Slow mode disabled") ; Show tooltip
  }

  ; Continuously check if the key is held long enough
  Loop
  {
    if (!GetKeyState("Numpad6", "P")) ; If the key is released, exit the loop
      Break

    if (A_TickCount - numpad6PressTime > 500) ; Check if the key was held for more than 500ms
    {
      slowModeDelay := 0 ; Reset delay to 0
      slowMode := 0 ; Disable slow mode
      ShowToolTip("Slow mode disabled") ; Show tooltip
      isHoldingNumpad6 := false ; Reset the holding state

      ; Wait until the key is released to prevent reactivation
      Loop
      {
        if (!GetKeyState("Numpad6", "P")) ; Wait until the key is released
          Break
        Sleep, 10 ; Small delay to prevent high CPU usage
      }
      Return ; Exit the hotkey
    }
    Sleep, 10 ; Small delay to prevent high CPU usage
  }

  ; Reset the holding state when the key is released
  isHoldingNumpad6 := false
Return

Numpad9:: ; Toggle NoSave status display
  global debugMode ; Ensure debugMode is accessible
  debugMode := !debugMode ; Toggle between 0 and 1
  ShowToolTip(debugMode ? "NoSave status display enabled" : "NoSave status display disabled") ; Show tooltip
Return

;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;FUNCTIONS
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================
;==================================================================================================================================================================================================================================================================================================================================================================================================================================

ApartmentsRun() ;function that runs "payback phase"
{
  InputBox, runsNum,, How many runs?,
  totaltime := Format("{1:.2f}",((runsNum*80)/60))
  totaltime2 := Format("{1:.2f}",(totaltime/60.0))
  totalpayout := RegExReplace((runsNum*5200000), "(\d)(?=(?:\d{3})+(?:\.|$))", "$1,")
  cashperminute := "3,900,000"
  MsgBox, 4,, Don't press anything after choosing "Yes"!!!`n`nWhole process will take %runsNum% runs -  around %totaltime% minutes(%totaltime2% hours).`n`nYou'll earn around $%totalpayout%.`n`nEstimated $/minute profit: $%cashperminute%.`n`n Do you want to continue?
  IfMsgBox, No
  {
    Return
  }
  else
  {
    WinActivate, Grand Theft Auto V
    QPC(1)
    Loop % runsNum
    {
      ToolTip, Going...(Run %A_index%), 400, 0
      fromSingleToOnline()
      forceSave()
      ApartmentsExchange()
      fromOnlineToSingle()
      Tooltip,,
    }
    MenuMapChecker()
    timer := Round(QPC(0), 2)
    perRun := Round(timer/runsNum, 2)
    saveblockDisable()
    MsgBox End of the line. Rounds passed: %runsNum%. Time passed: %timer%s. Cash earned: $%totalpayout%. Time per run: %perRun%s.
  }
}

ApartmentsPrep() ;function that runs preparation phase
{
  MsgBox, 4,, Don't press anything after choosing "Yes"!!!`n`nWhole process will take around 15 minutes. Do you want to continue?
  IfMsgBox Yes
  {
    PrepTime()
  }
  else
  {
    Return
  }
}

ApartmentsExchange() ;function that trades in all apartments into cheapest one(MUST PREPARE THE SLOTS FIRST !!!!)
{
  tradebutton_y := 80 ;y coordinate of trade-in slot; needed for later loop
  PullUpPhone()
  EnterBrowser()
  EnterDynastyEstate()

  Loop ; Infinite loop to ensure BuyTrashBlocker and TradeInChecker succeed
  {
    BuyTrashBlocker()

    ; Check if the Trade-In menu is found
    if (TradeInChecker() = 0) ; Trade-In menu successfully found
      break

    ; Fallback: Return to the homepage and try again
    MouseMove, 260, 110, 0 ; Example position for fallback click (homepage)
    Click
    Sleep 200
    EnterDynastyEstate() ; Return to Dynasty 8 website
  }

  Loop ; Infinite loop to ensure "Enter" key was successfully pressed
  {
    PressKey("Enter", 50, 2, 0)
    if (ReturnToMapChecker() = 0) ; "Return to map" button successfully found
      break
  }

  ReturnToMapPress()

  Loop, 9
  {
    counter := A_Index + 1
    Loop ; Infinite loop to ensure BuyTrash and TradeInChecker succeed
    {
      BuyTrash()

      ; 5-second check for TradeInChecker with fallback
      if (TradeInChecker() = 0) ; Trade-In menu successfully found
        break

      ; Fallback: Return to the homepage and try again
      MouseMove, 260, 110, 0 ; Example position for fallback click (homepage)
      Click
      Sleep 200
      EnterDynastyEstate() ; Return to Dynasty 8 website
    }

    tradebutton_y := tradebutton_y + 27
    MouseMove, 70, tradebutton_y, 0
    MouseMove, 70, tradebutton_y, 0
    Click
    Loop ; Infinite loop to ensure "Enter" key was successfully pressed
    {
      PressKey("Enter", 50, 2, 0)
      if (ReturnToMapChecker() = 0) ; "Return to map" button successfully found
        break
    }
    if (A_Index < 9) ; Skip ReturnToMapPress on the last iteration
      ReturnToMapPress()
  }
  ExitBrowser()
  Sleep 150
}

PrepTime() ;function that prepares all apartment slots so all of them will be worth 550k each
{
  WinActivate, Grand Theft Auto V
  QPC(1)
  tradebutton_y := 80 ;y coordinate of trade-in slot; needed for later loop
  Loop, 10
  {
    counter := A_Index - 1
    Tooltip, Preparing apartment no.(%A_Index%), 400, 0
    fromSingleToOnline()
    forceSave()
    Sleep 50
    PullUpPhone()
    EnterBrowser()
    EnterDynastyEstate()

    Loop ; Infinite loop to ensure BuyEclipse and TradeInChecker succeed
    {
      BuyEclipse()

      ; Check if the Trade-In menu is found
      if (TradeInChecker() = 0) ; Trade-In menu successfully found
        break

      ; Fallback: Return to the homepage and try again
      MouseMove, 260, 110, 0 ; Example position for fallback click (homepage)
      Click
      Sleep 200
      EnterDynastyEstate() ; Return to Dynasty 8 website
    }
    MouseMove, 70, tradebutton_y, 0
    MouseMove, 70, tradebutton_y, 0
    Click
    Loop ; Infinite loop to ensure "Enter" key was successfully pressed
    {
      PressKey("Enter", 50, 2, 0)
      if (ReturnToMapChecker() = 0) ; "Return to map" button successfully found
        break
    }
    Sleep 400
    ExitBrowser()
    PullUpPhone()
    EnterBrowser()
    EnterDynastyEstate()

    Loop ; Infinite loop to ensure BuyTrashBlocker and TradeInChecker succeed
    {
      BuyTrashBlocker()

      ; Check if the Trade-In menu is found
      if (TradeInChecker() = 0) ; Trade-In menu successfully found
        break

      ; Fallback: Return to the homepage and try again
      MouseMove, 260, 110, 0 ; Example position for fallback click (homepage)
      Click
      Sleep 200
      EnterDynastyEstate() ; Return to Dynasty 8 website
    }
    MouseMove, 70, tradebutton_y, 0
    MouseMove, 70, tradebutton_y, 0
    Click
    Loop ; Infinite loop to ensure "Enter" key was successfully pressed
    {
      PressKey("Enter", 50, 2, 0)
      if (ReturnToMapChecker() = 0) ; "Return to map" button successfully found
        break
    }
    tradebutton_y := tradebutton_y + 27
    ExitBrowser()
    Sleep 150
    fromOnlineToSingle()
    Tooltip,,
  }
  MenuMapChecker()
  timer := Round(QPC(0), 2)
  MsgBox, time needed: %timer%
}

; Optimized PressKey function to handle single presses more efficiently
PressKey(button, presstime, presses, sleeptime)
{
  if (presses = 1) {
    SendInput, {%button% down}
    Sleep %presstime%
    SendInput, {%button% up}
    Sleep %sleeptime%
  } else {
    Loop, %presses%
    {
      SendInput, {%button% down}
      Sleep %presstime%
      SendInput, {%button% up}
      if (presses > 1)
        Sleep 100
      Sleep %sleeptime%
    }
  }
} ;presskey function - very fast, at least faster than send

fromSingleToOnline()
{
  SetMouseDelay, 60
  result := 1
  Loop
  {
    MenuMapChecker()
    MouseMove, 913, 172, 0
    Click
    Sleep 700
    PressKey("Up", 50, 1, 150)
    PressKey("Enter", 50, 1, 150)
    PressKey("Up", 50, 1, 150)
    Critical
    saveblockDisable()
    Critical, Off
    PressKey("Enter", 60, 2, 100)
    Loop
    {
      ImageSearch, FoundX, FoundY, 867, 766, 984, 783, *80 %A_WorkingDir%\images\joining_online_button.bmp ; Check for "Join Online"
      if (ErrorLevel = 0)
      {
        result := 0
        break
      }
      ImageSearch, FoundX, FoundY, 831, 747, 1023, 795, *50 %A_WorkingDir%\images\retry_continue_buttons.bmp ; Check for "Retry/Continue"
      if (ErrorLevel = 0)
      {
        Critical
        saveblockDisable()
        Critical, Off
        Sleep 4000
        PressKey("Space", 500, 1, 0)
        result := 0
        break
      }
    }
    if (result = 0) ; Exit loop if something was found
      return
  }
}

MenuMapChecker()
{
  failedAttempts := 0 ; Counter for failed attempts
  Loop ; Infinite loop to ensure the pause menu is open
  {
    PressKey("Esc", 50, 1, 370) ; Press Esc to open the pause menu
    ImageSearch, FoundX, FoundY, 0, 0, 165, 182, *100 %A_WorkingDir%\images\map_button.bmp ; Check if pause menu is open
    if (ErrorLevel = 0) ; If the image is found
    {
      failedAttempts := 0 ; Reset the counter on success
      Return ; Exit the function
    }
    else
    {
      failedAttempts++ ; Increment the counter on failure
      if (failedAttempts >= 10) ; If 10 failed attempts
      {
        UnbreakMenu() ; Execute UnbreakMenu
        failedAttempts := 0 ; Reset the counter after executing UnbreakMenu
      }
    }
  }
}

UnbreakMenu()
{
  PressKey("Esc", 50, 1, 150)
  Sleep 100
  PressKey("Up", 50, 1, 150)
  Sleep 100
  Loop, 5
  {
    PressKey("Esc", 50, 1, 150)
    Sleep 100
  }
}

fromOnlineToSingle()
{
  SendInput, {Alt down}
  PressKey("F6", 500, 1, 0)
  SendInput, {Alt up}
  Sleep 30
  Loop
  {
    PixelGetColor, color, 831, 747
    if (color = 0x000000)
    {
      PressKey("Enter", 500, 1, 0)
      return
    }
    Sleep, 100
  }
} ;function that goes from gta online to story mode(franklin by default)

saveblockEnable() ;function to enable no-save mode
{
  global debugMode ; Ensure debugMode is accessible
  RunWait %comspec% /c "netsh advfirewall firewall add rule name="GTAOSAVEBLOCK" dir=out action=block remoteip=192.81.241.170-192.81.241.171 enable=yes" ,,Hide
  if (debugMode) ; Only show tooltip if debug mode is enabled
    ShowToolTip("NO SAVING MODE ON")
}

saveblockDisable()
{
  global debugMode ; Ensure debugMode is accessible
  RunWait %comspec% /c "netsh advfirewall firewall delete rule name="GTAOSAVEBLOCK"" ,,Hide
  if (debugMode) ; Only show tooltip if debug mode is enabled
    ShowToolTip("NO SAVING MODE OFF")
} ;function to disable no-save mode

; Optimized PullUpPhone function with timeout
PullUpPhone()
{
  Loop ; Infinite loop to ensure the phone is pulled up
  {
    ; Spam MButton for up to 5 seconds to open the phone
    Loop, 50
    {
      PressKey("MButton", 1, 1, 50) ; Try to open the phone
      ImageSearch, FoundX, FoundY, 920, 647, 943, 672, *80 %A_WorkingDir%\images\quick_actions_tile.bmp ; Check if phone is open
      if (ErrorLevel = 0) ; Phone successfully opened
        Return ; Exit the function only when the phone is successfully opened
      Sleep 100 ; Wait 100ms before checking again
    }

    ; If the phone is not open after 5 seconds, reset it using MenuMapChecker
    MenuMapChecker() ; Ensure the pause menu is open
    PressKey("Esc", 50, 1, 370) ; Close the pause menu to reset the phone
    Sleep 200 ; Small delay after closing the pause menu
  }
} ;function to take out gtao char phone

; Optimized EnterBrowser function with timeout
EnterBrowser()
{
  Loop ; Infinite loop to ensure the browser is entered
  {
    PressKey("Down", 50, 1, 50) ; Navigate down in the phone menu
    ImageSearch, FoundX, FoundY, 914, 696, 948, 729, *100 %A_WorkingDir%\images\browser_tile.png ; Check if browser tile is visible
    if (ErrorLevel = 0) ; Browser tile successfully found
    {
      Sleep 30
      PressKey("Enter", 50, 1, 600) ; Enter the browser
      Return ; Exit the function after successfully entering the browser
    }
  }
} ;function to enter phone's browser

EnterDynastyEstate()
{
  global slowMode, slowModeDelay
  extraSleep := slowMode ? slowModeDelay : 0 ; Use custom delay if slow mode is enabled
  Sleep 100 + extraSleep
  MouseMove, 255, 590, 0 ;enter dynasty 8 website
  Sleep 60 + extraSleep
  Click
  MouseMove, 310, 450, 1 ;"view property listings"
  Sleep 200 + extraSleep
  Click
} ;function to enter dynasty 8 website and then property listings

BuyEclipse()
{
  global slowMode, slowModeDelay
  extraSleep := slowMode ? slowModeDelay : 0 ; Use custom delay if slow mode is enabled
  MouseMove, 240, 270, 0 ;sort from low to high
  Click
  Sleep 100 + extraSleep
  MouseMove, 310, 270, 0 ;sort from high to low
  Click
  Sleep 100 + extraSleep
  MouseMove, 300, 400, 0 ;choose apartment
  Click
  Sleep 120 + extraSleep
  MouseMove, 780, 600, 0 ;select interiors
  Click
  Sleep 100 + extraSleep
  PressKey("WheelDown", 10, 3, 10) ;scroll down to show purchase button
  MouseMove, 760, 720, 0
  Sleep 50 + extraSleep
  Click
} ;function to buy most expensive apartment available for character

TradeInChecker() ; Function that checks for 5 seconds if the Trade-In menu is found
{
  Loop, 50 ; 50 iterations with 100ms pause each (total 5 seconds)
  {
    ImageSearch, FoundX, FoundY, 27, 49, 150, 66, *80 %A_WorkingDir%\images\trade_in_property_menu.bmp ; Image search for Trade-In menu
    if (ErrorLevel = 0) ; If the menu is found
      return 0 ; Success
    Sleep 100 ; Wait 100ms
  }
  return 1 ; Timeout after 5 seconds
}

ExitBrowser()
{
  MouseMove, 842, 108, 0 ;exit web browser
  Click
  Sleep 300
} ;function to exit phone's browser

BuyTrash()
{
  global slowMode, slowModeDelay
  extraSleep := slowMode ? slowModeDelay : 0 ; Use custom delay if slow mode is enabled
  MouseMove, 310, 270, 0 ;sort from high to low
  Click
  Sleep 100 + extraSleep
  MouseMove, 240, 270, 0 ;sort from low to high
  Click
  Sleep 100 + extraSleep
  MouseMove, 300, 400, 0 ;choose apartment
  Click
  Sleep 120 + extraSleep
  MouseMove, 750, 600, 0 ;purchase property button
  Sleep 50 + extraSleep
  Click
} ;function to buy cheapest apartment available for character

BuyTrashBlocker()
{
  BuyTrash()
  Critical
  saveblockEnable()
  Sleep 300
  Critical, Off
} ;function to buy cheapest apartment available for character (modified version for "preparation phase" - this one enables blocker before swap so trade-in value of most expensive apartment will stay but actual cheapest building will be used, resulting in some cheap house in paleto (for example) being worth as much as eclipse tower apartment

; Optimized ReturnToMapChecker function with timeout
ReturnToMapChecker()
{
  Loop ; Infinite loop to ensure the "return to map" button is found
  {
    ImageSearch, FoundX, FoundY, 414, 621, 573, 646, *50 %A_WorkingDir%\images\return_to_map_button.bmp
    if (ErrorLevel = 0) ; "Return to map" button successfully found
      return 0 ; Exit the function only when the button is found
  }
} ;state checker - checks presence of "return to map" button using image recognition

ReturnToMapPress()
{
  MouseMove, 500, 630, 1 ;return to map button
  Click
  Sleep 300
}

QPC( R := 0 )
{
  ; By SKAN,  http://goo.gl/nf7O4G,  CD:01/Sep/2014 | MD:01/Sep/2014
  Static P := 0,  F := 0,     Q := DllCall( "QueryPerformanceFrequency", "Int64P",F )
  Return ! DllCall( "QueryPerformanceCounter","Int64P",Q ) + ( R ? (P:=Q)/F : (Q-P)/F )
} ;timer, mostly for checking performance of script

ShowToolTip(message) {
  ToolTip, %message%, 10, 10
  SetTimer, RemoveToolTip, -3000  ; Removes the message after 3 seconds, but the script continues to run
}

RemoveToolTip() {
  ToolTip  ; Removes the message
}

forceSave() {
  ; Find image "joining_online_button"
  Loop
  {
    ImageSearch, FoundX, FoundY, 867, 766, 984, 783, *80 %A_WorkingDir%\images\joining_online_button.bmp
    if (ErrorLevel = 0)
    {
      break
    }
  }

  ; Wait until image is Gone → Black Screen begin
  Loop
  {
    ; Searching for black Pixel
    PixelGetColor, color, 831, 747
    if (color = 0x000000) ; Black Screen begin
    {
      break
    }
  }

  ; Wait until Black Screen is gone
  Loop
  {
    PixelGetColor, color, 831, 747
    if (color != 0x000000) ; If not black anymore
    {
      break
    }
  }

  ; Wait until "joining online"
  Loop
  {
    ImageSearch, FoundX, FoundY, 867, 766, 984, 783, *80 %A_WorkingDir%\images\joining_online_button.bmp
    if (ErrorLevel = 0)
    {
      break
    }
  }

  ; Wait until "joining online" is gone
  Loop
  {
    ImageSearch, FoundX, FoundY, 867, 766, 984, 783, *80 %A_WorkingDir%\images\joining_online_button.bmp
    if (ErrorLevel != 0)
    {
      break
    }
  }

  ; Pressing ALT + F4
  SendInput, {Alt down}
  PressKey("F4", 500, 1, 0)
  SendInput, {Alt up}
  Sleep 30

  ; Spamming ESC until message disappears
  Loop
  {
    PixelGetColor, color, 831, 747
    if (color != 0x000000)
    {
      break
    }

    PressKey("Esc", 50, 1, 0)
    Sleep, 100
  }
}

CheckForUpdates()
{
  global currentVersion
  latestVersion := ""
  releaseNotes := ""
  url := "https://api.github.com/repos/tetriskillerh/gtaoautoapps-Fix/releases/latest"
  downloadPage := "https://github.com/tetriskillerh/gtaoautoapps-Fix/releases/latest"

  ; Fetch the latest release information from GitHub
  HttpObj := ComObjCreate("WinHttp.WinHttpRequest.5.1")
  HttpObj.Open("GET", url, false)
  HttpObj.Send()

  if (HttpObj.Status = 200)
  {
    response := HttpObj.ResponseText
    ; Extract the "tag_name" field for the version
    RegExMatch(response, """tag_name"":""(.*?)""", match)
    latestVersion := match1

    ; Extract the "body" field for release notes
    RegExMatch(response, """body"":""(.*?)""", matchBody)
    rawNotes := StrReplace(matchBody1, "\r\n", "`n") ; Replace line breaks for display

    ; Parse all sections starting with ##
    allSections := ParseAllSections(rawNotes)
  }
  else
  {
    MsgBox, 48, Update Check Failed, Unable to check for updates. Please ensure you are connected to the internet.
    return
  }

  ; Compare the current version with the latest version
  if (latestVersion != "")
  {
    if (CompareVersions(currentVersion, latestVersion) > 0)
    {
      ShowToolTip("Dev Version: You are using a development version.")
    }
    else if (currentVersion != latestVersion)
    {
      MsgBox, 4, Update Available, A new version (%latestVersion%) is available!`n`nRelease Notes:`n`n%allSections%`n`nDo you want to download it now?
      IfMsgBox, Yes
      {
        Run, %downloadPage%
      }
    }
  }
}

ParseAllSections(rawNotes)
{
  ; Extract all sections starting with ##
  sections := ""
  Loop, Parse, rawNotes, `n
  {
    if (RegExMatch(A_LoopField, "^## "))
    {
      sections .= A_LoopField . "`n"
    }
    else if (sections != "" && !RegExMatch(A_LoopField, "^## "))
    {
      ; Replace "---" with a new line
      sections .= StrReplace(A_LoopField, "---", "") . "`n"
    }
  }
  return sections
}

CompareVersions(version1, version2)
{
  ; Split versions into parts (e.g., "v1.2.3" -> ["1", "2", "3"])
  RegExMatch(version1, "v(.*)", match1)
  RegExMatch(version2, "v(.*)", match2)
  parts1 := StrSplit(match11, ".")
  parts2 := StrSplit(match21, ".")

  ; Compare each part numerically
  Loop % Max(parts1.Length(), parts2.Length())
  {
    part1 := parts1[A_Index] ? parts1[A_Index] : 0
    part2 := parts2[A_Index] ? parts2[A_Index] : 0
    if (part1 > part2)
      return 1 ; version1 is higher
    else if (part1 < part2)
      return -1 ; version2 is higher
  }
  return 0 ; versions are equal
}
